package bls12

import (
	"fmt"
	"math/big"
	"testing"
)

func TestElement(t *testing.T) {
	scalar, _ := new(big.Int).SetString("1963682050463716735306519423594603765372963926167392383164464533709469233159384501785932660164645512448277654334904", 10)

	testCases := []struct {
		input  *big.Int
		output *g2Point
	}{
		{
			input: scalar,
			output: &g2Point{&twistPoint{
				x: fq2{
					c0: Fq{3806744813118040532, 10583667803947179747, 7303178493117452664, 14312002127729465071, 9764029308400673695, 1434693908170597373},
					c1: Fq{14258899139951699631, 14190277716756368963, 9352464871290491731, 7155410309372877414, 16300404450708486306, 75415169541309096},
				},
				y: fq2{
					c0: Fq{5281916076626990772, 17696280644033690262, 4381672114658023289, 13914682723901129720, 1225659760641706691, 1332210979857895904},
					c1: Fq{14864322725346073627, 13500118716299668515, 12706146284162045046, 11632551103653972043, 1715265610623700337, 1686737597037133166},
				},
				z: fq2{
					c0: Fq{6236734420214804535, 5251971190168070591, 7216024984990710000, 10155537549040552197, 16156612297006083289, 244531293916236993},
					c1: Fq{16677129638196305974, 1711728821233925621, 11993001720641068816, 9704591779017079118, 9925395858427433022, 955828579855012942},
				},
			}},
		},
	}
	for _, testCase := range testCases {
		t.Run(fmt.Sprintf("Scalar: %s", testCase.input.String()), func(t *testing.T) {
			if elem := G2.Element(testCase.input); !elem.Equal(testCase.output) {
				t.Errorf("expected %v, got %v\n", testCase.output, elem)
			}
		})
	}
}
