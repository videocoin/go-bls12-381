// Code generated by command: go run asm.go -out ../../fq_amd64.s -stubs ../../fq_decl.go. DO NOT EDIT.

// func fqAdd(z *[6]uint64, x *[6]uint64, y *[6]uint64)
TEXT 路fqAdd(SB), $0-24
	MOVQ    x+8(FP), AX
	MOVQ    y+16(FP), CX
	MOVQ    (AX), DX
	MOVQ    8(AX), BX
	MOVQ    16(AX), BP
	MOVQ    24(AX), SI
	MOVQ    32(AX), DI
	MOVQ    40(AX), AX
	ADDQ    (CX), DX
	ADCQ    8(CX), BX
	ADCQ    16(CX), BP
	ADCQ    24(CX), SI
	ADCQ    32(CX), DI
	ADCQ    40(CX), AX
	MOVQ    z+0(FP), CX
	MOVQ    DX, R8
	MOVQ    BX, R9
	MOVQ    BP, R10
	MOVQ    SI, R11
	MOVQ    DI, R12
	MOVQ    AX, R13
	SUBQ    q64+0(SB), R8
	SBBQ    q64+8(SB), R9
	SBBQ    q64+16(SB), R10
	SBBQ    q64+24(SB), R11
	SBBQ    q64+32(SB), R12
	SBBQ    q64+40(SB), R13
	CMOVQCC R8, DX
	CMOVQCC R9, BX
	CMOVQCC R10, BP
	CMOVQCC R11, SI
	CMOVQCC R12, DI
	CMOVQCC R13, AX
	MOVQ    R8, (CX)
	MOVQ    R9, 8(CX)
	MOVQ    R10, 16(CX)
	MOVQ    R11, 24(CX)
	MOVQ    R12, 32(CX)
	MOVQ    R13, 40(CX)
	RET

// func fqNeg(z *[6]uint64, x *[6]uint64)
TEXT 路fqNeg(SB), $0-16
	MOVQ x+8(FP), AX
	MOVQ q64+0(SB), CX
	MOVQ q64+8(SB), DX
	MOVQ q64+16(SB), BX
	MOVQ q64+24(SB), BP
	MOVQ q64+32(SB), SI
	MOVQ q64+40(SB), DI
	SUBQ (AX), CX
	SBBQ 8(AX), DX
	SBBQ 16(AX), BX
	SBBQ 24(AX), BP
	SBBQ 32(AX), SI
	SBBQ 40(AX), DI
	MOVQ z+0(FP), AX
	MOVQ CX, (AX)
	MOVQ DX, 8(AX)
	MOVQ BX, 16(AX)
	MOVQ BP, 24(AX)
	MOVQ SI, 32(AX)
	MOVQ DI, 40(AX)
	RET

// func fqSub(z *[6]uint64, x *[6]uint64, y *[6]uint64)
TEXT 路fqSub(SB), $0-24
	MOVQ    y+16(FP), AX
	MOVQ    q64+0(SB), CX
	MOVQ    q64+8(SB), DX
	MOVQ    q64+16(SB), BX
	MOVQ    q64+24(SB), BP
	MOVQ    q64+32(SB), SI
	MOVQ    q64+40(SB), DI
	SUBQ    (AX), CX
	SBBQ    8(AX), DX
	SBBQ    16(AX), BX
	SBBQ    24(AX), BP
	SBBQ    32(AX), SI
	SBBQ    40(AX), DI
	MOVQ    x+8(FP), AX
	ADDQ    (AX), CX
	ADCQ    8(AX), DX
	ADCQ    16(AX), BX
	ADCQ    24(AX), BP
	ADCQ    32(AX), SI
	ADCQ    40(AX), DI
	MOVQ    z+0(FP), AX
	MOVQ    CX, R8
	MOVQ    DX, R9
	MOVQ    BX, R10
	MOVQ    BP, R11
	MOVQ    SI, R12
	MOVQ    DI, R13
	SUBQ    q64+0(SB), R8
	SBBQ    q64+8(SB), R9
	SBBQ    q64+16(SB), R10
	SBBQ    q64+24(SB), R11
	SBBQ    q64+32(SB), R12
	SBBQ    q64+40(SB), R13
	CMOVQCC R8, CX
	CMOVQCC R9, DX
	CMOVQCC R10, BX
	CMOVQCC R11, BP
	CMOVQCC R12, SI
	CMOVQCC R13, DI
	MOVQ    R8, (AX)
	MOVQ    R9, 8(AX)
	MOVQ    R10, 16(AX)
	MOVQ    R11, 24(AX)
	MOVQ    R12, 32(AX)
	MOVQ    R13, 40(AX)
	RET

// func fqMul(z *[6]uint64, x *[6]uint64, y *[6]uint64)
TEXT 路fqMul(SB), $0-24
	RET
